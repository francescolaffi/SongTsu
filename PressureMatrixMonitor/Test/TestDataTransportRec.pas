unit TestDataTransportRec;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, DataTransportRec, DataTransport, SuperObject, Classes, ExtCtrls,
  SysUtils, Math;

type
  // Test methods for class TDataTransportRec

  TestTDataTransportRec = class(TTestCase)
  strict private
    FDataTransportRec: TDataTransportRec;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestClose;
    procedure TestOpen;
    procedure TestIsOpen;
    procedure TestGetData;
  end;

implementation

procedure TestTDataTransportRec.SetUp;
begin

end;

procedure TestTDataTransportRec.TearDown;
begin
  FDataTransportRec.Free;
  FDataTransportRec := nil;
end;

procedure TestTDataTransportRec.TestClose;
var
  ReturnValue: Boolean;
begin
  FDataTransportRec:=TDataTransportRec.Create(nil,true);
  CheckTrue(FDataTransportRec.Close);
end;

procedure TestTDataTransportRec.TestOpen;
var
  ReturnValue: Boolean;
  aConf: ISuperObject;
begin
  FDataTransportRec:=TDataTransportRec.Create(nil,true);
  CheckFalse(FDataTransportRec.Open(aConf));
end;

procedure TestTDataTransportRec.TestIsOpen;
var
  ReturnValue: Boolean;
begin
  FDataTransportRec:=TDataTransportRec.Create(nil,true);
  CheckFalse(FDataTransportRec.IsOpen);
end;

procedure TestTDataTransportRec.TestGetData;
var
  ReturnValue: Boolean;
  aRead: Integer;
  aBufferSize: Integer;
  aBuffer: Pointer;
begin
  FDataTransportRec:=TDataTransportRec.Create(nil,true);
  CheckFalse(FDataTransportRec.GetData(aBuffer, aBufferSize, aRead));
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTDataTransportRec.Suite);
end.

